// lib/features/home/presentation/providers/sync_controller_provider.dart

import 'dart:async';
import 'package:connectivity_plus/connectivity_plus.dart';
import 'package:riverpod_annotation/riverpod_annotation.dart';

import '../../data/providers/category/category_data_providers.dart';

part 'sync_controller_provider.g.dart';

@riverpod
class SyncController extends _$SyncController {
  StreamSubscription? _subscription;

  @override
  void build() {
    // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ç–∏
    _subscription = Connectivity().onConnectivityChanged.listen(_handleConnectivityChange);
    
    // –ü—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –æ—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è
    ref.onDispose(() {
      _subscription?.cancel();
    });
  }

  Future<void> _handleConnectivityChange(List<ConnectivityResult> results) async {
    // –ù–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Ç–æ–ª—å–∫–æ –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è, –∞ –Ω–µ –∫–æ–≥–¥–∞ –ø—Ä–æ–ø–∞–¥–∞–µ—Ç.
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ 'none'.
    final isOnline = results.any((result) => result != ConnectivityResult.none);

    if (isOnline) {
      print('‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ç–∏. –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é...');
      try {
        // –í—ã–∑—ã–≤–∞–µ–º –Ω–∞—à –º–µ—Ç–æ–¥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        await ref.read(categoryRepositoryProvider).syncWithServer();
        print('üëç –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞.');
      } catch (e) {
        print('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: $e');
      }
    } else {
      print('üîå –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç —Å–µ—Ç–∏.');
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑ UI, –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è
  Future<void> triggerSync() async {
     print('üîÑ –ó–∞–ø—É—Å–∫ —Ä—É—á–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
     try {
        await ref.read(categoryRepositoryProvider).syncWithServer();
        print('üëç –†—É—á–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞.');
      } catch (e) {
        print('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ä—É—á–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: $e');
      }
  }
}